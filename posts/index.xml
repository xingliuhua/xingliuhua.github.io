<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - xlh博客</title>
        <link>https://xingliuhua.github.io/posts/</link>
        <description>所有文章 | xlh博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>947725562@qq.com (xingliuhua)</managingEditor>
            <webMaster>947725562@qq.com (xingliuhua)</webMaster><lastBuildDate>Thu, 30 Sep 2021 17:55:28 &#43;0800</lastBuildDate><atom:link href="https://xingliuhua.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>golang 结构体内存对齐</title>
    <link>https://xingliuhua.github.io/posts/go_%E7%BB%93%E6%9E%84%E4%BD%93%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/</link>
    <pubDate>Thu, 30 Sep 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/go_%E7%BB%93%E6%9E%84%E4%BD%93%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/</guid>
    <description><![CDATA[为何需要内存对齐 CPU和内存数据交互的过程。CPU和内存是通过总线进行数据交互的。其中地址总线用来传递CPU需要的数据地址，内存将数据通过数]]></description>
</item><item>
    <title>趣谈linux笔记</title>
    <link>https://xingliuhua.github.io/posts/linux_%E8%B6%A3%E8%B0%88linux%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Mon, 23 Aug 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/linux_%E8%B6%A3%E8%B0%88linux%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[top命令 经常用来监控linux的系统状况，比如cpu、内存的使用。 第一行： 跟uptime的内容一样。平均负载信息。 第二行： Tasks — 任务（进程）]]></description>
</item><item>
    <title>linux软连接和硬连接</title>
    <link>https://xingliuhua.github.io/posts/linux_%E8%BD%AF%E7%A1%AC%E9%93%BE%E6%8E%A5/</link>
    <pubDate>Sun, 22 Aug 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/linux_%E8%BD%AF%E7%A1%AC%E9%93%BE%E6%8E%A5/</guid>
    <description><![CDATA[inode 文件还有元数据部分，例如名字、权限等，这就需要一个结构inode来存放。 什么是 inode 呢？inode 的“i”是 index 的意思，其实就是“索引”，类似图]]></description>
</item><item>
    <title>channel</title>
    <link>https://xingliuhua.github.io/posts/go_channel/</link>
    <pubDate>Thu, 19 Aug 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/go_channel/</guid>
    <description><![CDATA[关闭不再需要使用的 channel 并不是必须的。跟其他资源比如打开的文件、socket 连接不一样，这类资源使用完后不关闭后会造成句柄泄露，channel 使]]></description>
</item><item>
    <title>golang 引用私有仓库</title>
    <link>https://xingliuhua.github.io/posts/go_%E5%BC%95%E7%94%A8%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/</link>
    <pubDate>Thu, 19 Aug 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/go_%E5%BC%95%E7%94%A8%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/</guid>
    <description><![CDATA[` 直接使用go get 直接使用go get &hellip;添加私有仓库依赖时，会出现以下错误： get &#34;gitlab.com/xxx&#34;: found meta tag get.metaImport{Prefix:&#34;gitlab.com/xxx&#34;, VCS:&#34;git&#34;, RepoRoot:&#34;https://gitlab.com/xxx.git&#34;} at //gitlab.com/xxx?go-get=1 go get gitlab.com/xxx: git ls-remote -q https://gitlab.com/xxx.git in /Users/sulin/go/pkg/mod/cache/vcs/91fae55e78195f3139c4f56af15f9b47ba7aa6ca0fa761efbd5b6e2b16d5159d: exit status 128: fatal: could not read Username for &#39;https://gitlab.com&#39;:]]></description>
</item><item>
    <title>mysql innodb记录结构</title>
    <link>https://xingliuhua.github.io/posts/mysql_innodb%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%84/</link>
    <pubDate>Tue, 27 Jul 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_innodb%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%84/</guid>
    <description><![CDATA[innodb记录结构 页 我们知道读写磁盘的速度非常慢，和内存读写差了几个数量级，所以当我们想从表中获取某些记录时，InnoDB存储引擎需要一条]]></description>
</item><item>
    <title>mysql字符集</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E5%AD%97%E7%AC%A6%E9%9B%86/</link>
    <pubDate>Tue, 27 Jul 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E5%AD%97%E7%AC%A6%E9%9B%86/</guid>
    <description><![CDATA[字符集及编码 MySQL中的 utf8和 utf8mb4 我们上边说utf8字符集表示一个字符需要使用1~4个字节，但是我们常用的一些字符使用1~3个字节就可以]]></description>
</item><item>
    <title>mysql统计数据的收集</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E6%94%B6%E9%9B%86/</link>
    <pubDate>Tue, 27 Jul 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E6%94%B6%E9%9B%86/</guid>
    <description><![CDATA[InnoDB 统计数据是如何收集的 通过SHOW TABLE STATUS可以看到关于表的统计数据，通过SHOW INDEX可以看到关于索引的统计数据，那么 这些统计数据]]></description>
</item><item>
    <title>mysql配置</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E9%85%8D%E7%BD%AE/</link>
    <pubDate>Tue, 27 Jul 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E9%85%8D%E7%BD%AE/</guid>
    <description><![CDATA[配置 除了在命令行启动的时候指定参数如：mysqld &ndash;default-storage-engine = MyISAM外，MySQL程序在启动时会寻找多个路径下的配置文件，这些路径有的是固定的]]></description>
</item><item>
    <title>go sync.map</title>
    <link>https://xingliuhua.github.io/posts/go_syncmap/</link>
    <pubDate>Sat, 19 Jun 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/go_syncmap/</guid>
    <description><![CDATA[实现安全的map 自go 1.6之后， 并发地读写map会报错，这在一些知名的开源库中都存在这个问题，所以go 1.9之前的解决方案是额外绑定一个锁]]></description>
</item></channel>
</rss>
