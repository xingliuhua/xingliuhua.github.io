<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>test title</title>
        <link>https://xingliuhua.github.io/</link>
        <description>test title</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>947725562@qq.com (xlh)</managingEditor>
            <webMaster>947725562@qq.com (xlh)</webMaster><lastBuildDate>Sat, 20 Jun 2020 17:55:28 &#43;0800</lastBuildDate>
            <atom:link href="https://xingliuhua.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>go test</title>
    <link>https://xingliuhua.github.io/posts/go_test/</link>
    <pubDate>Sat, 20 Jun 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/go_test/</guid>
    <description><![CDATA[概述 我们可以为 Go 程序编写三类测试，即：功能测试（test）、基准测试（benchmark，也称性能测试），以及示例测试（example） 测试]]></description>
</item><item>
    <title>Redis学习-lru和redis实现</title>
    <link>https://xingliuhua.github.io/posts/redis_lru%E5%92%8Credis%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Tue, 16 Jun 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/redis_lru%E5%92%8Credis%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[lru实现 数组实现 用一个数组来存储数据，给每一个数据项标记一个访问时间戳，每次插入新数据项的时候，先把数组中存在的数据项的时间戳自增，并将新]]></description>
</item><item>
    <title>Redis学习-与数据库一致性问题</title>
    <link>https://xingliuhua.github.io/posts/redis_%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%87%B4%E6%80%A7/</link>
    <pubDate>Tue, 16 Jun 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/redis_%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%87%B4%E6%80%A7/</guid>
    <description><![CDATA[背景 我们使用redis作为缓存，查询的时候先去redis查，如果有数据直接返回，降低数据库的压力。如果没有的话，查数据库，如果数据库中查到了]]></description>
</item><item>
    <title>mysql分布式事务</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</link>
    <pubDate>Mon, 15 Jun 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</guid>
    <description><![CDATA[mysql的事务 undolog 实现原子性A。 UndoLog的原理很简单，为了满足事务的原子性，在操作任何数据之前，首先将数据备份到一个地方（这个存储数据]]></description>
</item><item>
    <title>sql执行顺序</title>
    <link>https://xingliuhua.github.io/posts/mysql_sql%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</link>
    <pubDate>Sun, 14 Jun 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_sql%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</guid>
    <description><![CDATA[sql执行顺序 (1)from (3) join (2) on (4) where (5)group by(开始使用select中的别名，后面的语句中都可以使用) (6) avg,sum&hellip;. (7)having (8) select (9) distinct (10) order by (11) limit 从这个顺序中我们不难发现，]]></description>
</item><item>
    <title>protobuf v2</title>
    <link>https://xingliuhua.github.io/posts/protobuf_v2/</link>
    <pubDate>Mon, 01 Jun 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/protobuf_v2/</guid>
    <description><![CDATA[protobuf 是什么 Protocol Buffer (简称Protobuf) 是Google出品的性能优异、跨语言、跨平台的序列化库。 2001年初，Protobuf首先在Google]]></description>
</item><item>
    <title>protobuf v3</title>
    <link>https://xingliuhua.github.io/posts/protobuf_v3/</link>
    <pubDate>Mon, 01 Jun 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/protobuf_v3/</guid>
    <description><![CDATA[protobuf 是什么 Protocol Buffer (简称Protobuf) 是Google出品的性能优异、跨语言、跨平台的序列化库。 2001年初，Protobuf首先在Google]]></description>
</item><item>
    <title>android protobuf grpc</title>
    <link>https://xingliuhua.github.io/posts/android_protobuf_grpc/</link>
    <pubDate>Fri, 15 May 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/android_protobuf_grpc/</guid>
    <description><![CDATA[android 中如何使用 1.配置依赖 根目录build.gradle: dependencies { classpath &#39;com.google.protobuf:protobuf-gradle-plugin:0.8.8&#39; } app build.gradle: apply plugin: &#39;com.google.protobuf&#39; //... android{ //... sourceSets { main { java { srcDir &#39;src/main/java&#39; } //定义protobuf文件夹 proto { srcDir &#39;src/main/proto&#39; }]]></description>
</item><item>
    <title>android glide</title>
    <link>https://xingliuhua.github.io/posts/android_glide/</link>
    <pubDate>Wed, 08 Apr 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/android_glide/</guid>
    <description><![CDATA[glide概述 Glide是⾕歌为我们推荐的⼀个图⽚加载库。为什么要选择使⽤Glide呢？ 1、代码有⼈维护，不⾄于出现问题，项⽬组都搞不定的时]]></description>
</item><item>
    <title>android加载html</title>
    <link>https://xingliuhua.github.io/posts/android_%E5%8A%A0%E8%BD%BDhtml/</link>
    <pubDate>Wed, 08 Apr 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/android_%E5%8A%A0%E8%BD%BDhtml/</guid>
    <description><![CDATA[android加载html Android中是通过webView控件来加载html⻚页⾯面的。在Android &lt; 4.4 （KitKat）上的WebV]]></description>
</item></channel>
</rss>
