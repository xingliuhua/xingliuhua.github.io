<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>笔记 - 分类 - xlh博客</title>
        <link>https://xingliuhua.github.io/categories/%E7%AC%94%E8%AE%B0/</link>
        <description>笔记 - 分类 - xlh博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>947725562@qq.com (xlh)</managingEditor>
            <webMaster>947725562@qq.com (xlh)</webMaster><lastBuildDate>Wed, 20 Jan 2021 17:55:28 &#43;0800</lastBuildDate><atom:link href="https://xingliuhua.github.io/categories/%E7%AC%94%E8%AE%B0/" rel="self" type="application/rss+xml" /><item>
    <title>mysql实战45讲笔记</title>
    <link>https://xingliuhua.github.io/posts/mysql_45%E8%AE%B2%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Wed, 20 Jan 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_45%E8%AE%B2%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[树高其实取决于叶子树（数据行数）和“N叉树”的N。 而N是由页大小和索引大小决定的。 MySQL 5.6 引入的索引下推优化（index condition pushdown)， 可]]></description>
</item><item>
    <title>字符编码</title>
    <link>https://xingliuhua.github.io/posts/%E5%9F%BA%E7%A1%80-%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/</link>
    <pubDate>Fri, 08 Jan 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/%E5%9F%BA%E7%A1%80-%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/</guid>
    <description><![CDATA[最早的计算机系统都是使用 EBCDIC(扩展的二进制的十进制转换码) 和 ASCII 编码，因为那时候只是用一些英文字母数字，加减号和其他一些字符，字符并不]]></description>
</item><item>
    <title>mysq crash-safe</title>
    <link>https://xingliuhua.github.io/posts/mysql_crash_safe/</link>
    <pubDate>Mon, 28 Dec 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_crash_safe/</guid>
    <description><![CDATA[mysql的crash-safe MySQL 保证数据不会丢的能力主要体现在两方面： 能够恢复到任何时间点的状态； 能够保证MySQL在任何时间段突然奔溃，]]></description>
</item><item>
    <title>mysq ACID实现原理</title>
    <link>https://xingliuhua.github.io/posts/mysql_acid%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Fri, 25 Dec 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_acid%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[概述 分层 Server 层包括连接器、查询缓存、分析器、优化器、执行器等，涵盖 MySQL 的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等）]]></description>
</item><item>
    <title>go 类型直接比较</title>
    <link>https://xingliuhua.github.io/posts/go_%E7%B1%BB%E5%9E%8B%E7%9B%B4%E6%8E%A5%E6%AF%94%E8%BE%83/</link>
    <pubDate>Tue, 08 Dec 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/go_%E7%B1%BB%E5%9E%8B%E7%9B%B4%E6%8E%A5%E6%AF%94%E8%BE%83/</guid>
    <description><![CDATA[结构体能否比较？数组能否比较？slice、map、channel能否比较？接口能否比较？函数能否比较？ 结构体比较 能用&quot;==&quo]]></description>
</item><item>
    <title>curl笔记</title>
    <link>https://xingliuhua.github.io/posts/curl/</link>
    <pubDate>Wed, 11 Nov 2020 00:00:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/curl/</guid>
    <description><![CDATA[快速入门 curl 是常用的命令行工具，用来请求 Web 服务器。它的名字就是客户端（client）的 URL 工具的意思. -i参数可以显示http response的]]></description>
</item><item>
    <title>go test</title>
    <link>https://xingliuhua.github.io/posts/go_test/</link>
    <pubDate>Sat, 20 Jun 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/go_test/</guid>
    <description><![CDATA[概述 我们可以为 Go 程序编写三类测试，即：功能测试（test）、基准测试（benchmark，也称性能测试），以及示例测试（example） 测试]]></description>
</item><item>
    <title>Redis学习-lru和redis实现</title>
    <link>https://xingliuhua.github.io/posts/redis_lru%E5%92%8Credis%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Tue, 16 Jun 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/redis_lru%E5%92%8Credis%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[lru实现 数组实现 用一个数组来存储数据，给每一个数据项标记一个访问时间戳，每次插入新数据项的时候，先把数组中存在的数据项的时间戳自增，并将新]]></description>
</item><item>
    <title>Redis学习-与数据库一致性问题</title>
    <link>https://xingliuhua.github.io/posts/redis_%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%87%B4%E6%80%A7/</link>
    <pubDate>Tue, 16 Jun 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/redis_%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%80%E8%87%B4%E6%80%A7/</guid>
    <description><![CDATA[背景 我们使用redis作为缓存，查询的时候先去redis查，如果有数据直接返回，降低数据库的压力。如果没有的话，查数据库，如果数据库中查到了]]></description>
</item><item>
    <title>mysql分布式事务</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</link>
    <pubDate>Mon, 15 Jun 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</guid>
    <description><![CDATA[mysql的事务 undolog 实现原子性A。 UndoLog的原理很简单，为了满足事务的原子性，在操作任何数据之前，首先将数据备份到一个地方（这个存储数据]]></description>
</item></channel>
</rss>
