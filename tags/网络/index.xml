<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>网络 - 标签 - xingliuhua博客</title>
        <link>https://xingliuhua.github.io/tags/%E7%BD%91%E7%BB%9C/</link>
        <description>网络 - 标签 - xingliuhua博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>947725562@qq.com (xingliuhua)</managingEditor>
            <webMaster>947725562@qq.com (xingliuhua)</webMaster><lastBuildDate>Wed, 18 May 2022 12:55:28 &#43;0800</lastBuildDate><atom:link href="https://xingliuhua.github.io/tags/%E7%BD%91%E7%BB%9C/" rel="self" type="application/rss+xml" /><item>
    <title>websocket协议</title>
    <link>https://xingliuhua.github.io/posts/network_websocket/</link>
    <pubDate>Wed, 18 May 2022 12:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/network_websocket/</guid>
    <description><![CDATA[概述 HTML5 开始提供的一种浏览器与服务器进行全双工通讯的网络技术，属于应用层协议。它基于 TCP 传输协议，并复用 HTTP 的握手通道。 说到优点，这里的对比参照物]]></description>
</item><item>
    <title>IP，子网掩码，网关</title>
    <link>https://xingliuhua.github.io/posts/network_ip_%E6%8E%A9%E7%A0%81_%E7%BD%91%E5%85%B3/</link>
    <pubDate>Wed, 01 Feb 2017 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/network_ip_%E6%8E%A9%E7%A0%81_%E7%BD%91%E5%85%B3/</guid>
    <description><![CDATA[经常看到下图，有些概念还是要弄清楚的。 IP 电脑之间要实现网络通信，就必须要有一个合法的ip地址。IP地址 = 网络地址 + 主机地址，（又称：主机号和]]></description>
</item><item>
    <title>TCP UDP HTTP SOCKET</title>
    <link>https://xingliuhua.github.io/posts/network_socket/</link>
    <pubDate>Wed, 01 Feb 2017 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/network_socket/</guid>
    <description><![CDATA[SOCKET 套接字，它并不是协议，而是TCP，UDP网络的API，每个语言基本都有对应的实现。Socket是应用层与TCP/IP协议族通信的中间软件抽]]></description>
</item><item>
    <title>网络 DNS</title>
    <link>https://xingliuhua.github.io/posts/network_dns/</link>
    <pubDate>Wed, 01 Feb 2017 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/network_dns/</guid>
    <description><![CDATA[域名分级 DNS查询过程 总结 我们知道了DNS的两种查询方法，但实际上，在DNS查询过程中，客户端和服务器也都会加入缓存的机制，这样可以减少查询]]></description>
</item><item>
    <title>网络_分层</title>
    <link>https://xingliuhua.github.io/posts/network_%E5%88%86%E5%B1%82/</link>
    <pubDate>Wed, 01 Feb 2017 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/network_%E5%88%86%E5%B1%82/</guid>
    <description><![CDATA[网络分层 在OSI七层模型中，每一层的作用和对应的协议如下： 我们都知道数据从应用层发下来，会在每一层都会加上头部信息，进行封装，然后再发送到数]]></description>
</item><item>
    <title>网络—TCP</title>
    <link>https://xingliuhua.github.io/posts/network_tcp/</link>
    <pubDate>Wed, 01 Feb 2017 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/network_tcp/</guid>
    <description><![CDATA[TCP是什么？ TCP（Transmission Control Protocol 传输控制协议）是一种面向连接的、可靠的、基于字节流的传输层通信协议。 TCP头部 主要字段的作]]></description>
</item><item>
    <title>网络—UDP</title>
    <link>https://xingliuhua.github.io/posts/network_udp/</link>
    <pubDate>Wed, 01 Feb 2017 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/network_udp/</guid>
    <description><![CDATA[udp首部格式 这个伪首部是模仿的IP数据报的首部，只有在计算校验和时才出现，不向下传递也不向上递交。 udp数据包的理论长度是多少，合适的ud]]></description>
</item><item>
    <title>网络—UDP和TCP区别</title>
    <link>https://xingliuhua.github.io/posts/network_udp_tcp%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Wed, 01 Feb 2017 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/network_udp_tcp%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[UDP特点： 面向无连接 首先 UDP 是不需要和 TCP一样在发送数据前进行三次握手建立连接的，想发数据就可以开始发送了。并且也只是数据报文的搬运工，不]]></description>
</item><item>
    <title>HTTP</title>
    <link>https://xingliuhua.github.io/posts/network_http/</link>
    <pubDate>Mon, 02 Jan 2017 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/network_http/</guid>
    <description><![CDATA[http请求格式 示例： GET /mix/76.html?name=kelvin&amp;password=123456 HTTP/1.1 Host: www.fishbay.cn Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Encoding: gzip, deflate, sdch Accept-Language: zh-CN,zh;q=0.8,en;q=0.6 http响应格式 HTTP/1.1 200 OK Server: nginx Date: Mon, 20 Feb 2017 09:13:59 GMT Content-Type: text/plain;charset=UTF-8 Vary: Accept-Encoding Cache-Control: no-store Pragrma: no-cache Expires: Thu,]]></description>
</item><item>
    <title>MSS和MTU</title>
    <link>https://xingliuhua.github.io/posts/network_mss_mtu/</link>
    <pubDate>Mon, 02 Jan 2017 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/network_mss_mtu/</guid>
    <description><![CDATA[分段特指发生在使用TCP协议的传输层中的数据切分行为 分片特指发生在使用IPv4协议的网络IP层中的数据切分行为 最大传输单元(Maximum Transmission]]></description>
</item></channel>
</rss>
