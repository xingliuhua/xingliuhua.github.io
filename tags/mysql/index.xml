<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>mysql - 标签 - xlh博客</title>
        <link>https://xingliuhua.github.io/tags/mysql/</link>
        <description>mysql - 标签 - xlh博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>947725562@qq.com (xlh)</managingEditor>
            <webMaster>947725562@qq.com (xlh)</webMaster><lastBuildDate>Wed, 20 Jan 2021 17:55:28 &#43;0800</lastBuildDate><atom:link href="https://xingliuhua.github.io/tags/mysql/" rel="self" type="application/rss+xml" /><item>
    <title>mysql实战45讲笔记</title>
    <link>https://xingliuhua.github.io/posts/mysql_45%E8%AE%B2%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Wed, 20 Jan 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_45%E8%AE%B2%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[树高其实取决于叶子树（数据行数）和“N叉树”的N。 而N是由页大小和索引大小决定的。 MySQL 5.6 引入的索引下推优化（index condition pushdown)， 可]]></description>
</item><item>
    <title>mysq crash-safe</title>
    <link>https://xingliuhua.github.io/posts/mysql_crash_safe/</link>
    <pubDate>Mon, 28 Dec 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_crash_safe/</guid>
    <description><![CDATA[mysql的crash-safe MySQL 保证数据不会丢的能力主要体现在两方面： 能够恢复到任何时间点的状态； 能够保证MySQL在任何时间段突然奔溃，]]></description>
</item><item>
    <title>mysq ACID实现原理</title>
    <link>https://xingliuhua.github.io/posts/mysql_acid%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Fri, 25 Dec 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_acid%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[概述 分层 Server 层包括连接器、查询缓存、分析器、优化器、执行器等，涵盖 MySQL 的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等）]]></description>
</item><item>
    <title>mysql分布式事务</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</link>
    <pubDate>Mon, 15 Jun 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</guid>
    <description><![CDATA[mysql的事务 undolog 实现原子性A。 UndoLog的原理很简单，为了满足事务的原子性，在操作任何数据之前，首先将数据备份到一个地方（这个存储数据]]></description>
</item><item>
    <title>sql执行顺序</title>
    <link>https://xingliuhua.github.io/posts/mysql_sql%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</link>
    <pubDate>Sun, 14 Jun 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_sql%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</guid>
    <description><![CDATA[sql执行顺序 (1)from (3) join (2) on (4) where (5)group by(开始使用select中的别名，后面的语句中都可以使用) (6) avg,sum&hellip;. (7)having (8) select (9) distinct (10) order by (11) limit 从这个顺序中我们不难发现，]]></description>
</item><item>
    <title>mysql高性能笔记</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E9%AB%98%E6%80%A7%E8%83%BD%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Mon, 20 Jan 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E9%AB%98%E6%80%A7%E8%83%BD%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[mysql锁概述 锁的粒度和效率要平衡好，锁粒度比较小并发会高，但是太多的锁会造成操作锁消耗太多资源。 mysql提供了多个粒度的锁。每种mys]]></description>
</item><item>
    <title>mysql分库分表分区</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E5%88%86%E5%8C%BA/</link>
    <pubDate>Thu, 07 Mar 2019 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E5%88%86%E5%8C%BA/</guid>
    <description><![CDATA[传统的分库分表都是通过应用层逻辑实现的，对于数据库层面来说，都是普通的表和库。分区是数据库层面的。 分库 database不是文件，只起到nam]]></description>
</item><item>
    <title>mysql索引原理</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86/</link>
    <pubDate>Tue, 05 Mar 2019 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86/</guid>
    <description><![CDATA[页 mysql中的页和操作系统的页有点类似，都是逻辑单位。都是假设数据在磁盘上是一起的，我们读取磁盘的时候一次读一页，而不是一条一条的数据来取]]></description>
</item><item>
    <title>mysql优化</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E4%BC%98%E5%8C%96/</link>
    <pubDate>Sun, 03 Mar 2019 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E4%BC%98%E5%8C%96/</guid>
    <description><![CDATA[分析效率 show status like &ldquo;xxx&rdquo; 查询一些msyql性能参数 connections: 连接数据库服务端的次数 slow_queries：慢查询次数 com_select：查询次数 com_]]></description>
</item><item>
    <title>mysql备份、主从</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E5%A4%87%E4%BB%BD%E4%B8%BB%E4%BB%8E/</link>
    <pubDate>Sat, 02 Mar 2019 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E5%A4%87%E4%BB%BD%E4%B8%BB%E4%BB%8E/</guid>
    <description><![CDATA[备份和恢复 mysqldump命令备份 mysqldump命令把数据库备份为一个文本文件，包含了很多create和insert语句，使用这些语句]]></description>
</item></channel>
</rss>
