<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>mysql - 标签 - xlh博客</title>
        <link>https://xingliuhua.github.io/tags/mysql/</link>
        <description>mysql - 标签 - xlh博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>947725562@qq.com (xingliuhua)</managingEditor>
            <webMaster>947725562@qq.com (xingliuhua)</webMaster><lastBuildDate>Tue, 27 Jul 2021 17:55:28 &#43;0800</lastBuildDate><atom:link href="https://xingliuhua.github.io/tags/mysql/" rel="self" type="application/rss+xml" /><item>
    <title>mysql innodb记录结构</title>
    <link>https://xingliuhua.github.io/posts/mysql_innodb%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%84/</link>
    <pubDate>Tue, 27 Jul 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_innodb%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%84/</guid>
    <description><![CDATA[innodb记录结构 页 我们知道读写磁盘的速度非常慢，和内存读写差了几个数量级，所以当我们想从表中获取某些记录时，InnoDB存储引擎需要一条]]></description>
</item><item>
    <title>mysql字符集</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E5%AD%97%E7%AC%A6%E9%9B%86/</link>
    <pubDate>Tue, 27 Jul 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E5%AD%97%E7%AC%A6%E9%9B%86/</guid>
    <description><![CDATA[字符集及编码 MySQL中的 utf8和 utf8mb4 我们上边说utf8字符集表示一个字符需要使用1~4个字节，但是我们常用的一些字符使用1~3个字节就可以]]></description>
</item><item>
    <title>mysql统计数据的收集</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E6%94%B6%E9%9B%86/</link>
    <pubDate>Tue, 27 Jul 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E6%94%B6%E9%9B%86/</guid>
    <description><![CDATA[InnoDB 统计数据是如何收集的 通过SHOW TABLE STATUS可以看到关于表的统计数据，通过SHOW INDEX可以看到关于索引的统计数据，那么 这些统计数据]]></description>
</item><item>
    <title>mysql配置</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E9%85%8D%E7%BD%AE/</link>
    <pubDate>Tue, 27 Jul 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E9%85%8D%E7%BD%AE/</guid>
    <description><![CDATA[配置 除了在命令行启动的时候指定参数如：mysqld &ndash;default-storage-engine = MyISAM外，MySQL程序在启动时会寻找多个路径下的配置文件，这些路径有的是固定的]]></description>
</item><item>
    <title>mysql join过程</title>
    <link>https://xingliuhua.github.io/posts/mysql_join%E8%BF%87%E7%A8%8B/</link>
    <pubDate>Thu, 08 Apr 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_join%E8%BF%87%E7%A8%8B/</guid>
    <description><![CDATA[被驱动表能用到索引 select * from t1 straight_join t2 on (t1.a=t2.a); 如果直接使用 join 语句，MySQL 优化器可能会选择表 t1 或 t2 作为驱动表，这样会影响我们分析 SQL 语句的执行过程。所以]]></description>
</item><item>
    <title>mysql是怎么运行的笔记</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/</link>
    <pubDate>Thu, 25 Feb 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/</guid>
    <description><![CDATA[服务器层次划分 为了管理方便，人们把连接管理、查询缓存、语法解析、查询优化这些并不涉及真实数据存储的功能划分为MySQL server的功能，把]]></description>
</item><item>
    <title>mysql实战45讲笔记</title>
    <link>https://xingliuhua.github.io/posts/mysql_45%E8%AE%B2%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Wed, 20 Jan 2021 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_45%E8%AE%B2%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[树高其实取决于叶子树（数据行数）和“N叉树”的N。 而N是由页大小和索引大小决定的。 MySQL 5.6 引入的索引下推优化（index condition pushdown)， 可]]></description>
</item><item>
    <title>mysq crash-safe</title>
    <link>https://xingliuhua.github.io/posts/mysql_crash_safe/</link>
    <pubDate>Mon, 28 Dec 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_crash_safe/</guid>
    <description><![CDATA[mysql的crash-safe MySQL 保证数据不会丢的能力主要体现在两方面： 能够恢复到任何时间点的状态； 能够保证MySQL在任何时间段突然奔溃，]]></description>
</item><item>
    <title>mysq避免幻读的原理</title>
    <link>https://xingliuhua.github.io/posts/mysql_%E9%81%BF%E5%85%8D%E5%B9%BB%E8%AF%BB%E7%9A%84%E5%8E%9F%E7%90%86/</link>
    <pubDate>Mon, 28 Dec 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_%E9%81%BF%E5%85%8D%E5%B9%BB%E8%AF%BB%E7%9A%84%E5%8E%9F%E7%90%86/</guid>
    <description><![CDATA[mysql在可重复读隔离级别实现了可重复读靠两种技术：mvcc + next lock 多版本并发控制（MVCC）（快照读/一致性读） 多数数据库都实现了多版本并]]></description>
</item><item>
    <title>mysq ACID实现原理</title>
    <link>https://xingliuhua.github.io/posts/mysql_acid%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Fri, 25 Dec 2020 17:55:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xingliuhua.github.io/posts/mysql_acid%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[事务 典型的MySQL事务是如下操作的： start transaction; # 一条或多条sql语句 commit; 其中start transaction标识事务开始，commit提交事务，将]]></description>
</item></channel>
</rss>
